<?php

namespace App\Http\Controllers;

use App\Services\TelegramService;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;

class TelegramController extends Controller
{
    protected TelegramService $telegramService;
    
    public function __construct(TelegramService $telegramService)
    {
        $this->telegramService = $telegramService;
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö Webhook –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram
     */
    public function handleWebhook(Request $request)
    {
        $update = $request->all();
        
        Log::info('Telegram webhook received', ['update' => $update]);
        
        try {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
            if (isset($update['message'])) {
                $this->handleMessage($update['message']);
            } elseif (isset($update['callback_query'])) {
                $this->handleCallbackQuery($update['callback_query']);
            }
            
            return response()->json(['status' => 'ok']);
        } catch (\Exception $e) {
            Log::error('Error handling Telegram webhook', [
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString(),
            ]);
            
            return response()->json(['status' => 'error'], 500);
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Webhook –¥–ª—è –±–æ—Ç–∞
     */
    public function setupWebhook()
    {
        $webhookUrl = config('telegram.bots.' . config('telegram.default') . '.webhook_url');
        
        if (empty($webhookUrl)) {
            $webhookUrl = url('/api/telegram/webhook');
        }
        
        $result = $this->telegramService->setWebhook($webhookUrl);
        
        return response()->json($result);
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Webhook
     */
    public function getWebhookInfo()
    {
        $result = $this->telegramService->getWebhookInfo();
        
        return response()->json($result);
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
     */
    protected function handleMessage(array $message)
    {
        $chatId = $message['chat']['id'];
        $text = $message['text'] ?? '';
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        if (isset($message['entities']) && $message['entities'][0]['type'] === 'bot_command') {
            $this->handleCommand($chatId, $text);
            return;
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if ($text === '–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ') {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ WebApp
            $this->telegramService->sendMessage($chatId, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:', [
                'reply_markup' => json_encode([
                    'inline_keyboard' => [
                        [
                            [
                                'text' => '–û—Ç–∫—Ä—ã—Ç—å Fizio',
                                'web_app' => ['url' => config('telegram.webapp.url')]
                            ]
                        ]
                    ]
                ])
            ]);
        } elseif ($text === '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å') {
            $this->telegramService->sendMessage($chatId, '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–µ!');
        } elseif ($text === '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞') {
            $this->telegramService->sendMessage($chatId, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ –≤–∞—à–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö!');
        } elseif ($text === '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏') {
            $this->telegramService->sendMessage($chatId, '–†–∞–∑–¥–µ–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–∏—Ö –∑–∞–Ω—è—Ç–∏–π!');
        } elseif ($text === '–ü–æ–º–æ—â—å') {
            $this->sendHelpMessage($chatId);
        } else {
            // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            $this->telegramService->sendMessage($chatId, '–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.');
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
     */
    protected function handleCommand(string $chatId, string $text)
    {
        // –£–¥–∞–ª—è–µ–º —Å–∏–º–≤–æ–ª "/" –∏–∑ –Ω–∞—á–∞–ª–∞ –∫–æ–º–∞–Ω–¥—ã
        $command = strtolower(explode(' ', trim($text))[0]);
        
        switch ($command) {
            case '/start':
                $this->sendWelcomeMessage($chatId);
                break;
                
            case '/webapp':
            case '/app':
                $this->telegramService->sendMessage($chatId, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:', [
                    'reply_markup' => json_encode([
                        'inline_keyboard' => [
                            [
                                [
                                    'text' => '–û—Ç–∫—Ä—ã—Ç—å Fizio',
                                    'web_app' => ['url' => config('telegram.webapp.url')]
                                ]
                            ]
                        ]
                    ])
                ]);
                break;
                
            case '/profile':
                $this->telegramService->sendMessage($chatId, '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–µ!');
                break;
                
            case '/stats':
                $this->telegramService->sendMessage($chatId, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ –≤–∞—à–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö!');
                break;
                
            case '/workout':
                $this->telegramService->sendMessage($chatId, '–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É.');
                break;
                
            case '/help':
                $this->sendHelpMessage($chatId);
                break;
                
            default:
                $this->telegramService->sendMessage($chatId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.');
                break;
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ CallbackQuery
     */
    protected function handleCallbackQuery(array $callbackQuery)
    {
        $chatId = $callbackQuery['message']['chat']['id'];
        $data = $callbackQuery['data'];
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö callbackQuery –¥–∞–Ω–Ω—ã—Ö
        // ...
        
        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è callbackQuery
        $this->telegramService->callApi('answerCallbackQuery', [
            'callback_query_id' => $callbackQuery['id'],
        ]);
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    protected function sendWelcomeMessage(string $chatId)
    {
        $text = "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Fizio Fitness Bot!*\n\n";
        $text .= "–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-–ø–æ–º–æ—â–Ω–∏–∫. –° –º–æ–µ–π –ø–æ–º–æ—â—å—é –≤—ã –º–æ–∂–µ—Ç–µ:\n";
        $text .= "‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å —Ñ–∏—Ç–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n";
        $text .= "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n";
        $text .= "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n";
        $text .= "‚Ä¢ –°–ª–µ–¥–∏—Ç—å –∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n\n";
        $text .= "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.";
        
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        $keyboard = [
            ['–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'],
            ['–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'],
            ['–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', '–ü–æ–º–æ—â—å'],
        ];
        
        $this->telegramService->sendMessage($chatId, $text, [
            'parse_mode' => 'Markdown',
            'reply_markup' => json_encode([
                'keyboard' => $keyboard,
                'resize_keyboard' => true,
                'one_time_keyboard' => false,
            ]),
        ]);
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    protected function sendHelpMessage(string $chatId)
    {
        $text = "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n";
        $text .= "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n";
        $text .= "/webapp - –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n";
        $text .= "/profile - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n";
        $text .= "/stats - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n";
        $text .= "/workout - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ\n";
        $text .= "/help - –ü–æ–ª—É—á–∏—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n";
        $text .= "–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º.";
        
        $this->telegramService->sendMessage($chatId, $text, [
            'parse_mode' => 'Markdown',
        ]);
    }
    
    /**
     * –°—Ç—Ä–∞–Ω–∏—Ü–∞ WebApp –¥–ª—è Telegram
     */
    public function webApp()
    {
        return view('telegram.webapp');
    }
} 