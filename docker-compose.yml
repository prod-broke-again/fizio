version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: fizio-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        environment:
            APP_ENV: production
            APP_KEY: ${APP_KEY}
            APP_URL: https://fizio.online
            DB_CONNECTION: mysql
            DB_HOST: mariadb
            DB_PORT: 3306
            DB_DATABASE: ${DB_DATABASE:-fizio}
            DB_USERNAME: ${DB_USERNAME:-root}
            DB_PASSWORD: ${DB_PASSWORD:-password}
            REDIS_HOST: redis
            REDIS_PORT: 6379
        depends_on:
            - mariadb
            - redis
        networks:
            - fizio

    nginx:
        image: nginx:alpine
        container_name: fizio-nginx
        restart: unless-stopped
        ports:
            - "9080:80"
            - "9443:443"
        volumes:
            - .:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - fizio

    mariadb:
        image: mariadb:11
        container_name: fizio-mariadb
        restart: unless-stopped
        ports:
            - "9306:3306"
        environment:
            MARIADB_DATABASE: ${DB_DATABASE}
            MARIADB_USER: ${DB_USERNAME}
            MARIADB_PASSWORD: ${DB_PASSWORD}
            MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - fizio

    redis:
        image: redis:alpine
        container_name: fizio-redis
        restart: unless-stopped
        ports:
            - "9380:6379"
        networks:
            - fizio

    ws:
        build:
            context: ./ws_server
            dockerfile: Dockerfile
        container_name: fizio-ws
        restart: unless-stopped
        ports:
            - "9001:3001"
        environment:
            REDIS_HOST: redis
        depends_on:
            - app
            - redis
        networks:
            - fizio

    queue:
        image: fizio-app # Используем тот же образ, что и для app
        container_name: fizio-queue
        command: php artisan queue:work --tries=3 --timeout=60
        restart: unless-stopped
        depends_on:
            - app
            - redis
        volumes:
            - .:/var/www
        networks:
            - fizio

volumes:
    dbdata:

networks:
    fizio:
        driver: bridge
